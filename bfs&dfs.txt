- 큐 -

삽입5 삽입2 삽입3 삽입7 삭제 삽입1 삽입4 삭제
[3,7,1,4]

from collections import deque
queue = deque()

queue.append(5) // 시간복잡도 상수시간
queue.append(2)
queue.append(3)
queue.append(7)
queue.popleft() // 시간복잡도 상수시간
queue.append(1)
queue.append(4)
queue.popleft()

[4,1,7,3]
queue.reverse()
[3,7,1,4]



- 재귀함수 - 

자기 자신을 다시 호출하는 함수

def recursive_function(i):
  if i == 100:
  retun  
  print('재귀함수')
  recursive_function(i+1)

recursive_function()

파이썬은 최대 재귀 제한 횟수가 있음. 
재귀함수의 종료 조건을 반드시 명시해야 한다. 언젠가는 프로그램이 정해진 값을 반환할 수 있도록 만들어야 함.

- 팩토리얼 -
0!과 1!은 1이다.

- 유클리드 호제법 - 
A와 B의 최대 공약수를 구하는 알고리즘
두 자연수 A, B에 대하여 (A > B) A를 B로 나눈 나머지 값을 R이라고 하면
A와 B의 최대공약수는 B와 R의 최대공약수와 같음.
a = 192, b = 162

192를 162로 나누고 나눈 값 30이 R임
162를 30으로 나누면 12가 R임
30을 12로 나누면 6임
결과적으로 12와 6이 나오는데 6은 나누어 떨어져버리니 답은 6이 됨.