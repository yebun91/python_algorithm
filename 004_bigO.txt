1. O(1): 입력값이 아무리 커도 실행시간이 일정함.
2. O(log n): 여기서부터 실행 시간은 입력값에 영향을 받는다.
 그러나 로그는 매우 큰 입력값에도 크게 영향을 받지 않는 편으로 웬만한 n의 크기에 대해서도 매우 견고하다.
3. O(n): 입력값만큼 실행 시간에 영향을 받으며, 알고리즘을 수행하는 데 걸리는 시간은 입력값에 비례한다. 
  이러한 알고리즘을 선형시간(linear-time) 알고리즘이라고 한다.
  정ㅇ렬되지 않은 리스트에서 최댓값 또는 최솟값을 찾는 경우가 이에 해당하며 이 값을 찾기 위해서는 모든 입력값을 적어도 한 번 이상은 살펴봐야 한다.
4. O(n log n): 병합 정렬을 비롯한 대부분의 효율 좋은 정렬 알고리즘이 이에 해당한다.
  적어도 모든 숭에 대해 한 번 이상은 비교해야 하는 비교 기반 정렬 알고리즘은 아무리 좋은 알고리즘도 O(n log n)보다 빠를 수 없다.
5. O(n2): 버블 정렬같은 비효율적인 정렬 알고리즘이 이에 해당한다.
6. O(2n): 피보나치 수를 재귀로 계산하는 알고리즘이 이에 해당한다. 
7. O(n!): 각 도시를 방문하고 돌아오는 가장 짧은 경로를 찾는 외판원 문제를 브루트 포스로 풀이할 때가 이에 해당한다.
  가장 느린 알고리즘으로 입력값이 조금만 커져도 웬만한 다항시간 내에는 계산이 어렵다.
  